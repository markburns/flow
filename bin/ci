#!/usr/bin/env zsh

branch=${1:-$(current-branch)}
response=$(last-build ".[0]" $branch)
BUILD_NUM=$(printf "%s" $response | jq '.build_num')
REPO=$(repo)
ARTIFACTS_PATH="project/github/$REPO/$BUILD_NUM/artifacts"
STATUS=$(printf "%s" $response | jq '.status')
BUILD_TIME=$(printf "%s" $response | jq '.build_time_millis')
BUILD_URL=https://circleci.com/gh/$REPO/$BUILD_NUM

if [ '"running"' = $STATUS ]; then
  >&2 echo "${BLUE}Running: $BUILD_URL${NC}"
  exit -1
elif [ '"not_running"' = $STATUS ]; then
  >&2 echo "${GREY}Not running: $BUILD_URL${NC}"
  exit -1
elif [ '"success"' = $STATUS ]; then
  echo "${GREEN}OK${NC}"
  exit 0
elif [ '"canceled"' = $STATUS ]; then
  >&2 echo "${GREY}Cancelled${NC}"
  exit -2
elif [ '"not_run"' = $STATUS ]; then
  echo "${GREY}Not run${NC}"
  exit -3
elif [ '"fixed"' = $STATUS ]; then
  echo $BUILD_URL
  echo "${GREEN}Fixed${NC}"
  exit 0
fi

setopt +o nomatch

echo "Last build status: ${RED}$STATUS${NC}. $BUILD_URL"

ASSET_URLS=(${(ps:\n:)"$(circle $ARTIFACTS_PATH '.[].url' )"})

set +x
num_urls=$ASSET_URLS[(I)$ASSET_URLS[-1]]

if [ -z $num_urls ]; then
  echo -en "${RED}No artifacts found\n"
  echo "circle project/github/$REPO/tree/$branch '.'"
  exit 1
else
fi

build_asset_path=tmp/build-assets/$BUILD_NUM/

if [ -e $build_asset_path ]; then
else
  mkdir -p $build_asset_path

  for url in $ASSET_URLS; do
    TRIMMED=$(sed -e 's/"//g' <<< $url)

    xml=$(echo $url | grep "xml")
    test_stats=$(echo $url | grep "test_stats")
    echo -n "."

    if [ -z $xml ]; then
      if [ -z $test_stats ]; then
        # echo 'not a test stat'
        slugified_path=$(slugify $TRIMMED)
        with_extension=$(echo $slugified_path | sed -e 's/\-\([^\-]\+\)$/\.\1/g')
        OUTPUT_FILE="tmp/build-assets/$BUILD_NUM/$with_extension"
        curl --silent "$TRIMMED?circle-token=$CIRCLE_TOKEN" -o $OUTPUT_FILE
      else
        # echo 'test stat--skipping'
      fi
    else
      WORKER_NUMBER=$(echo $TRIMMED | grep -o '\([0-9]\+\)/test_output'  | grep -o '\([0-9]\+\)')
      OUTPUT_FILE=tmp/build-assets/$BUILD_NUM/results$WORKER_NUMBER.xml
      curl --silent "$TRIMMED?circle-token=$CIRCLE_TOKEN" -o $OUTPUT_FILE
    fi
  done
fi


echo $NC
echo "\n\`\`\`"
format_tests_output_ruby='s = gets; while s do; output = eval s; puts  "------------------------------------------------------------------\n#{output}"; s = gets; end'
results=$(xq '.' $build_asset_path/*.xml | jq '.testsuite.testcase[] | select(.failure) | .failure."#text"' | ruby -e $format_tests_output_ruby)


if [ $2=="failures" ]; then
  printf %s $results  | grep "^\-\+" -C1 | grep -v "^\-\+" | grep -v "^Failure\/Error" | grep -o "\.[\.a-z_\/]\+:[0-9]\+" | recode html..unicode
else
  printf %s $results | recode html..unicode
fi
echo "\`\`\`"
cat $build_asset_path/*.xml | less | grep testcase | grep "<failure message" | grep -o "<failure message\=\"[^\"]\+" | grep -o '".*' | sort | uniq -c | sort -n -r | sed -e "s/\s\+\([0-9]\+\)\s\"/\\${RED}\1 times: /" | recode html..unicode
