#!/usr/bin/env zsh

branch=${1:-$(current-branch)}
response=$(last-build $branch)
build_num=$(printf "%s" $response | jq '.build_num')

second_argument=${2:-""}
build_asset_path=./tmp/build-assets/$build_num

format_tests_output_ruby='s = gets; while s do; output = eval s rescue output; puts  "------------------------------------------------------------------\n#{output}"; s = gets; end'
results=$(xq '.' $build_asset_path/*.xml | jq '.testsuite.testcase[] | select(.failure) | .failure."#text"' | ruby -e $format_tests_output_ruby)
failures=$(printf %s $results  | grep "^\-\+" -C1 | grep -v "^\-\+" | grep -v "^Failure\/Error" | grep -o "\.[\.a-z_\/]\+:[0-9]\+" | sed -e "s/\&apos;/'/" | recode html..unicode)

if [[ "$second_argument" == "failures" ]]; then
  printf %s $failures
else
  if [[ "$second_argument" == "rerun" ]]; then
    printf %s $failures  |  xargs spring rspec
  else
    printf %s $results
  fi
fi

cat $build_asset_path/*.xml | less | grep testcase | grep "<failure message" | grep -o "<failure message\=\"[^\"]\+" |   sed 's/\:0x[0-9a-f]\{16\}//' | grep -o '".*' | sort | uniq -c | sort -n -r | sed -e "s/\s\+\([0-9]\+\)\s\"/\\${RED}\1 times: /" | sed -e "s/\&apos;/'/" | recode html..unicode
