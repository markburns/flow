#!/usr/bin/env ruby
require 'json'
require 'active_support/all'

json = `flow-jira-board`

class Ticket < OpenStruct
  def avatar
    url = image["16x16"] rescue return
    file = image_file(url)
    image = `viu #{file} --width=20`

    "\n#{image.gsub(/^/, "  ")}\n"
  end
end

tickets = JSON.parse(json).map{|t| Ticket.new(t)}
keys= %w(id description epic image status who title)

FileUtils.mkdir "/tmp/flow" unless File.exist?("/tmp/flow")

def image_file(url)
  url = url.gsub(/[^a-z0-9]/, "-").gsub(/\-+/, "-").gsub(/^\-|\-$/, "")
  url = "/tmp/flow/#{url}.png"
end

images = tickets.group_by{|t| t.image && t.image['16x16']}.keys.uniq

images = images.each_with_object({}) do |url, result|
  if url
    file=image_file(url)
    unless File.exist?(file)
      `curl -L "#{url}" -o #{file}`
    end
  end
end

order = ["Released","Awaiting Release", "Project Release", "UAT", "Review", "Blocked", "In Progress"]


by_status = tickets.group_by(&:status)
in_order = by_status.sort_by{|s,_| order.index(s)}
tickets.group_by(&:status).sort_by{|s,_| order.index(s)}.each do |status, tickets_for_status|
  puts '-'*100
  puts "  #{`echo $GREEN`}#{status}"
  puts
  puts
  tickets_for_status.group_by(&:who).each do |who, tickets_for_person|
    puts "\n  ------"
    puts "  #{`echo $BLUE`}#{who}#{`echo $NC`}"
    puts tickets_for_person.first.avatar

    tickets_for_person.each do |ticket|
      puts "      #{ticket.title.ljust(60, ' ')} #{ticket.id}"
      trimmed = ticket.description&.gsub(/^/, "    ") || ""
      trimmed = trimmed.split("\n").map { |l| l[0..200]}.join("\n")
    end
  end
end
